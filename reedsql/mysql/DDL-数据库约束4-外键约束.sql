-- 5.外键约束
-- 在数据库中通过外键来体现现实中实体和实体之间的关系.这种数据库称为关系型数据库.
-- 外键约束关系到两个表的两个字段.在一个表中可以同时有多个外键约束
-- 外键约束的要求:(1)子表的外键值必须要在父表的主键值的范围之内;(2)外键值可以重复,可以为null
-- 父表中的主键字段或唯一键字段,才能被子表引用为外键!
-- 在关系型数据库中,通过外键约束来保证数据的安全,但是外键约束会降低数据库的执行效率!
-- 所以:在实际的发生中对于外键有两种用法
-- 1.在数据库中设置外键,通过外键来保证数据的安全
-- 2.在数据库中不设置外键,而是在Java程序中通过业务逻辑来保证数据的安全!
-- 例如:在我们使用的员工表中,就没有设置外键约束
INSERT INTO 员工表 (员工编号, 部门编号)
VALUES (9000, 60);
SELECT *
FROM 员工表;
SELECT *
FROM 部门表;


-- ----------------------------------------------------------------------------------------------------------------------
-- (1)在外键约束的作用下,在创建表的时候,需要先创建父表,后创建子表

CREATE TABLE 部门1
(
    部门编号 INT(4) PRIMARY KEY,
    部门名称 VARCHAR(10),
    部门位置 VARCHAR(20)
);


-- 在子表中创建外键约束的时候,必须要使用标准方式
CREATE TABLE 员工1
(
    员工编号   INT(4) PRIMARY KEY,
    员工姓名   VARCHAR(10),
    工作     VARCHAR(10),
    领导编号   INT(4),
    部门外键ID INT(4), -- 用来做外键的字段,名称可以和父表的主键字段名称不同

    -- 子表的外键约束字段要引用父表的主键字段或唯一键字段
    CONSTRAINT 员工_部门_FK FOREIGN KEY (部门外键ID) REFERENCES 部门1 (部门编号)
);


-- ----------------------------------------------------------------------------------------------------------------------
-- (2)在外键约束的作用下,在插入数据的时候,要先插入父表的数据,后插入子表的数据
-- 子表的外键值必须要在父表的主键值的范围之内

-- 先插入父表的数据
INSERT INTO 部门1
VALUES (10, "开发部", "北京");
INSERT INTO 部门1
VALUES (20, "销售部", "北京");
INSERT INTO 部门1
VALUES (30, "技术部", "北京");


-- 后插入子表的数据
INSERT INTO 员工1
VALUES (1000, "张0", "软件工程师", 7369, 10); -- 外键值可以重复
INSERT INTO 员工1
VALUES (1001, "张1", "软件工程师", 7369, 10);
INSERT INTO 员工1
VALUES (1002, "张2", "软件工程师", 7369, 10);
INSERT INTO 员工1
VALUES (2000, "王0", "销售员", 7369, 20);
INSERT INTO 员工1
VALUES (2001, "王1", "销售员", 7369, 20);
INSERT INTO 员工1
VALUES (2002, "王2", "销售员", 7369, 20);
INSERT INTO 员工1
VALUES (4001, "赵0", "销售员", 7369, 40); -- 失败,因为没有40这个部门
INSERT INTO 员工1
VALUES (5000, "孙0", "储备人员", 7369, NULL); -- 成功,外键约束值可以为NULL
INSERT INTO 员工1
VALUES (5001, "孙1", "储备人员", 7369, NULL);
INSERT INTO 员工1
VALUES (5002, "孙2", "储备人员", 7369, NULL);

-- 查询数据
SELECT *
FROM 员工1;
SELECT *
FROM 部门1;

-- ----------------------------------------------------------------------------------------------------------------------
-- (3)在外键约束的作用下,下删除数据的时候,需要先删除子表数据(或把子表的外键值设置为null),后删除父表数据

DELETE
FROM 员工1
WHERE 部门外键ID = 10;
UPDATE 员工1
SET 部门外键ID = NULL
WHERE 部门外键ID = 10;
DELETE
FROM 部门1
WHERE 部门编号 = 10;


UPDATE 员工1
SET 部门外键ID = 10
WHERE 员工编号 < 2000;

-- ----------------------------------------------------------------------------------------------------------------------
-- (4)在外键约束的作用下,在更新数据时候,不能更新父表的主键字段
UPDATE 部门1
SET 部门编号 = 100
WHERE 部门编号 = 10;

-- ----------------------------------------------------------------------------------------------------------------------
-- (3)在外键约束的作用下,在删除表的时候,需要先删除子表,后删除父表
DROP TABLE IF EXISTS 员工1;
DROP TABLE IF EXISTS 部门1;

-- LIMIT:查询表中最前面的几条记录或中间某几条记录
-- 用法：limit 起始下标m,长度n
-- m：记录开始的index，默认从 0 开始，表示第一条记录；
-- n ：指从第 m+1 条开始，取 n 条；
-- 注意:LIMIT只在MySql/SqlSever中有效

-- ======================================================================================================================
-- 1.查询表中最前面的几条记录

-- 查询工资最高的前三个员工的信息
-- 思路:
-- (1)查询员工信息,并且按照工资降序排列
SELECT *
FROM 员工表
ORDER BY 月薪 DESC;

-- (2)使用LIMIT取得前3条记录
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT 0,3;
-- 从0开始,取连续的三条记录

-- (3)使用LIMIT的是,默认的就是从0开始的
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT 3;
-- 默认从0开始,取连续的三条记录


-- 查询雇佣日期最早的前5个员工的信息
SELECT *
FROM 员工表
ORDER BY 受雇日期 ASC LIMIT 5;


-- ======================================================================================================================
-- 2.使用LIMIT查询中间某几条记录

-- 查询员工信息,按照工资降序排列,查询3~8位的员工信息
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT 2, 6;
-- 从2开始,连续的6条记录


-- ======================================================================================================================
-- 3.使用LIMIT执行分页查询:每次查询固定条数的数据
/*
分页查询的规则
定义:pagesize ,每页显示的数据的条数,例如每页显示5条 ; pageno,页号
分页查询的具体规则: LIMIT (pageno-1)*pagesize, pagesize
第1页:  LIMIT 0,5;
第2页:  LIMIT 5,5;
第3页:  LIMIT 10,5;
*/

-- 对员工表中的数据执行分页查询,每页显示5条记录
-- 第1页
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT 0,5;

-- 第2页
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT 5,5;

-- 第3页,剩余的条数不够5条,则有多少就显示多少
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT 10,5;

-- ======================================================================================================================
-- 注意,在使用分页查询的时候,必须要给出明确的起始位置,不能使用表达式
SELECT *
FROM 员工表
ORDER BY 月薪 DESC LIMIT
(
2
-
1
)
*
5
,
5;

-- 存储过程
-- 存储过程是一个数据库对象,保存在数据库中
-- 在存储过程中,可以使用我们前面讲的SQL内容,并且可以加入编程语言的特性(循环,判断,分支)
-- 在过程中可以执行DDL,DML,TCL ,和以前没有任何区别
-- 在过程中执行DQL语句的时候,必须要使用SELECT ... INTO 格式
-- 在不同的数据库中,存储过程的语法都是不同的!只要用来存储过程,数据库是无法移植的!

/*
创建存储过程的语法
CREATE PROCEDURE 存储过程的名称(参数列表)
BEGIN
   SQL语句;
END;

存储过程的参数除了有数据类型之外,还有一种特殊的类型,有就是输入/输出类型,具体的有三种类型
1.IN类型 :可以向过程中传递参数,如果没有声明输入输出类型,默认的是IN类型
2.OUT类型:可以把过程中的结果返回给调用者
3.IN OUT类型:既可以传入,又可以传出
*/

-- out表示参数的类型是out类型 ,num是参数名称,int是num参数的数据类型(注意,不能声明类新的长度)
-- 这个过程的功能是:查询员工表的员工总数,并且返回查询结果
CREATE PROCEDURE PROC_1(out num int)

BEGIN
-- 把查询语句的结果赋值给num这个out类型的参数
SELECT COUNT(*)
INTO num
FROM 员工表;
END;


-- 我们声明了一个存储过程.要想让过程执行,必须要显示的调用这个存储过程!
-- 通过@num传递out类型的参数
CALL PROC_1(@num);

-- 存储过程执行之后,会通过out类型的参数带回查询结果,使用下面的语句获取结果
SELECT @num;

-- ======================================================================================================================
-- 再声明一个存储过程
-- num1,num2没有声明输入/输出类型,默认的就是in类型
-- 过程的功能:返回num1 + num2的结果
CREATE PROCEDURE PROC_ADD(num1 int, num2 int, out res int)
BEGIN
    -- 在过程中不需要用return 返回结果,out类型的参数会自动把结果带回给调用者
    set
res = num1 + num2;
END;

-- 调用存储过程
CALL PROC_ADD(10,20,@res);
SELECT @res;
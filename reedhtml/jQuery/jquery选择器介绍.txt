V_1.0 jquery选择器:
        1.作用：定位页面中符合定位条件的所有的标签
		  2.原理： 封装CSS选择器，通过CSS选择器定位
		  3.种类： 九种


V_2.0 【基本选择器】: 可以根据 【标签ID编号】，【标签类型名】,【标签采用css样式名称】------006-jQuery-基本选择器.html
        一。命令格式:
		       1.[ID选择器格式]: $("#ID编号")
				   1)功能：定位页面中，【第一个】符合条件的标签，相当于
					        document.getElementById("ID编号");

             2.[标签类型名称格式]:  $("标签类型名称")
				   1)功能： 定位页面中，【所有】指定标签名称的标签，相当于
					        docuemnt.getElementsByTagName("div")

             3.[css样式名称格式]:    $(".css自定义样式名称")
				    1)功能： 定位页面中，【所有】通过class属性使用指定CSS样式名称的标签，相当于
					        docuemt.getElementsByClass("yy");

             4.[定位BODY标签中所有内容]:  $("*")

				 5.[组合定位格式]:  $("条件1,条件2")
				    1)功能: 在页面中，某一个标签只有满足于其中一种条件，就会被定位
					         相当于sql or命令   select  *  from emp where sal >=3000 or job='manager'

V_3.0 【表单域标签选择器  和   表单域标签专有属性过滤选择器】
       一。表单域标签：
		           1.分类: 1)INPUT系列  --<input type="text/radio/checkbox/button/submit/hidden">
					          2)下拉列表   --<select>   <option>
								 3)多行文本框 --<textarea rows="行数"  cols="列数">
                 2.作用： 1)辅助用户提交【请求参数】
					           2)展示服务器端推送的【响应数据】
        二。两种选择器，只能针对<input系列表单域标签>进行定位
		  三。命令格式:
		            1.【表单域标签选择器】   $(":type属性内容")
						   1) 例子：  $(":text"):定位页面中所有的当行文本框
							           $(":checkbox")：定位页面中所有的多选框
                  2.【表单域标签专有属性过滤选择器】 $(":type属性内容:专有属性")
						   1)例子：   $(":button:disabled"):定位页面中所有【不可用】的按钮
							           $(":checkobx:checked"):定位页面中所有【处于选中状态】的多选框
										  $(":text:enabled"):定位页面中所有，【处于可用状态】的文本框
										  $("#city>option:selected")定位当前下拉列表中，【被选中】的选项标签

										  <select id="city">
										    <option value="bj">北京</option>
											 <option value="sh" selected>上海</option>
										  </select>

        四。JQUERY工具包提供用于操作【标签内容】的【功能函数】介绍
		            1. val函数: 读取当前标签中value属性内容
						            设置当前标签中value属性内容
										<input type="text" value="java">
										$(":text").val();//读取value属性
                              $(":text").val("mysql")//设置value属性内容

                  2. text函数: 读取当前标签中【显示内容】
						             设置当前标签中【显示内容】
										 <div>123</div>
										 <option  value="bj">北京</option> 以上 "123" 和 "北京"都是标签可以显示内容
                               $("div").text(); 123
                               $("option").text("上海");

                  3. attr函数: 读取当前标签中【基本属性】内容
						             设置当前标签中【基本属性】内容
										【基本属性】：大多数标签都拥有的属性，比如[id，name,title]
										 <div id="myId" title="ok">123</div>
										 $("div").attr("id");//myId
										 $("div").attr("title","下课");

                  4. prop函数: 读取当前表单域标签【专有状态】内容
						             设置当前表单域标签【专有状态】内容
										  <input type="text" >
										  $(":text").prop("disabled",true);设置文本框为不可用状态
                                <input type="radio" checked/>
										  var flag =$(":radio").prop("checked");// true
										  *****四个【专有状态】中 [enabled]是常量不能被手动赋值

                  5. append函数: 为当前标签，添加【子标签】
                                 为<tr></tr>添加一对td子标签
                                 var $td= $("<td></td>");
											$("tr").append($td); //<tr><td></td></tr>

                  6. appendTo函数：将当前【子标签】添加到【父标签】
						                  为<tr></tr>添加一对td子标签
                                    var $td= $("<td></td>");
												var $tr=$("tr");
												$td.appendTo($tr); // <tr><td></td></tr>

V_4.0 【层级选择器】: 根据标签之间【父子关系】和【兄弟关系】定位满足条件的标签
        一。HTML标签之间的关系:
		      1.父子关系：嵌套关系
				            <tr>
								   <td>
									    <input type="checkbox">
									</td>
								</tr>
								1) td 是  tr 的 【直接子标签】
								2) checkbox 是 td 的 【直接子标签】
								3) checkbox 是 tr 的 【间接子标签】

             2.兄弟关系: 如果一组标签，拥有相同的【父标签】，彼此之间没有【嵌套关系】
				             此时这组标签称为【兄弟关系】
                         <tr>
								   <td>1</td>
									<td>2</td>
									<td>3</td>//这三个td就是兄弟关系
								 </tr>
         二。【层级选择器】中命令格式分类:  -----007-jQuery-层级选择器.html
			     1.定位当前父标签下，满足条件的【直接/间接子标签】
				    1) $("父标签>条件"): 定位当前父标签下，所有满足【条件】的【直接子标签】
					 2) $("父标签 条件"): 定位当前父标签下，所有满足【条件】的【直接/间接子标签】

				  2.定位当前标签，前面或则后面满足条件的【兄弟标签】
				    1) $("当前标签~条件"):定位当前标签【后面】，出现所有满足条件的兄弟标签
					 2) $("当前标签+条件"):定位当前标签【后面】，【紧邻】的满足条件的兄弟标签
                3) $("当前标签").siblings(条件):定位当前标签【前面或则后面】，所有满足条件的兄弟标签

V_5.0 【子元素过滤选择器】:根据指定【位置】定位当前标签下的【子标签】---012-jQuery-子元素过滤选择器.html
        一。例子：
		           <tr>
					     <td>1</td>
						  <td>2</td>
						  <td>3</td>
					  </tr>
					  问题：获得tr下，第二个td类型子标签
       二 : 命令格式
		         1) $("父标签 :first-child"):定位父标签下，位置处于第一位置的直接子标签
					2) $("父标签 :last-child"): 定位父标签下，位置处于最后一个位置的直接子标签
					3) $("父标签 :nth-child(位置)"):定位父标签下，指定位置的直接子标签
					     ****[位置]
               4) $("父标签 :only-child")：定位父标签只能有一个子标签，定位他的唯一子标签

V_6.0 :[基本属性过滤选择器]：根据定位标签中，【是否"手动"声明指定属性】以及【属性的内容是否是指定内容】对
                             选中的标签，进行过滤筛选
									   <div> 没有【手动声明ID】
										<div id="one">【手动声明ID】
										<div id="two">
        一。命令格式:
		        1. $("定位条件[属性名]"):定位标签中，必须手动声明【指定的属性名】
				        例子： $("div[id]"):定位所有手动申明了id属性的DIV标签所对应的DOM
              2. $("定位条件[属性名='指定内容']"): 定位标签中，必须手动声明【指定的属性名】并且
				                                       【属性的内容】必须【等于】指定的内容
                    例子： $("div[id='one']")
              3.  $("定位条件[属性名^='指定内容']"):定位标签中，必须手动声明【指定的属性名】并且
				                                       【属性的内容】必须以【指定的内容为开头】  select  *  from emp where ename like '李%'
              4.  $("定位条件[属性名$='指定内容']"):定位标签中，必须手动声明【指定的属性名】并且
				                                       【属性的内容】必须以【指定的内容为结尾】  select  *  from emp where ename like '%亮'
              5.  $("定位条件[属性名*='指定内容']"):定位标签中，必须手动声明【指定的属性名】并且
				                                       【属性的内容】必须【包含】以【指定的内容】  select  *  from emp where ename like '%亮%'
              6.  $("定位条件[属性名1][属性名2*='指定内容'][....]"):定位标签，必须同时满足所有的条件
				  7.  $("定位条件[属性名!='指定内容']") 定位标签，可以没有手动声明指定的属性，或则手动声明指定的属性但是内容不能等于指定内容
                       <div> 没有手动声明id属性，但是拥有id属性，标签中所有基本属性默认值都是"" <div id="">
							  <div id="one"> 手动声明id属性

V_7.0 [基本过滤选择器]：根据选择的DOM对象，在JQUERY对象数组中保存的位置进行过滤筛选
            一。命令格式:
				       1. $("定位条件:first"):定位附合条件的第一个DOM对象
						 2. $("定位条件:last"):定位附合条件的最后一个DOM对象
						 3. $("定位条件:eq(位置)")：定位附合条件的指定位置上的DOM
						                            [位置以0]
                   4. $("定位条件:lt(位置)")：定位附合条件的所有小于指定位置的DOM对象
						 5. $("定位条件:gt(位置)"): 定位附合条件的所有大于指定位置的DOM对象
						 6. $("定位条件:even"):定位附合条件并且存储位置属于偶数的所有的DOM对象
						    $(定位条件:odd);  :定位附合条件并且存储位置属于奇数的所有的DOM对象
						     <tr>
							      <td>1</td>
									 <td>2</td>
									  <td>3</td>
									   <td>4</td>
							  </tr>
							  $("td:first").text();?? 1
							  $("td:eq(2)").text();?? 3
							  $("td:lt(2)").text("ok");<td>1</td> <td>2</td>
							  $("td:gt(2)").text("ok");<td>4</td>
							  ***数组中保存的DOM对象的存储位置，与对应标签在页面中声明的顺序是
							     完全一致

V_8.0[可见性过滤选择器]：根据标签中display属性定位符合条件的标签
              一。命令格式:
				        1.$("定位条件:visible"):定位所有符合【定位条件】并且在浏览器处于
						                          【可见状态】的标签
                    2.$("定位条件:hidden"):定位所有符合【定位条件】并且在浏览器处于
						                          【不可见状态】的标签
                      ******依据就是标签中display = block  可以见状态 ;display=none 不可见状态

V_9.0 [内容过滤选择器]：根据标签是否包含【指定显示内容】或则【指定子标签】进行定位筛选
              一。标签中【内容】:
				             1) 基本属性内容
								 2) 专有状体内容
								 3) 显示内容
								 4) 子标签  <tr><td>1</td></tr>
               二。命令格式


V_10.0 标签内容操作函数介绍-----------empty(),remove()
       一。功能定义:
		       empty():销毁当前标签拥有的所有的子标签。
				 remove():销毁当前标签及其拥有的所有的子标签
       二。 例子：
		            <tr>
						  <td>1</td>
						  <td>2</td>
						</tr>
						$("tr").empty();运行完毕后，<tr></tr>
						$("tr").remove();运行完毕后,tr标签及其拥有子标签都会从浏览器内存销毁
        三。使用场景:
		         1.empty(): 在下拉列表级联
					2.remove():动态表格

V_11.0 jquery事件绑定方式:
         一。事件绑定种类:
			     1.$obj.bind("监听事件名",处理函数);
				  2.$obj.监听事件函数(处理函数);

				   <input type="button" onclick="????"/>
               <script>
					   $("button").bind("click",function(){处理代码})
					</script>

         二。事件移除
			     1. $obj.unbind("监听事件名")将当前标签上，指定监听事件进行移除
				  2. $obj.unbind(); 将当前标签上所有绑定的监听事件移除
         三。支持在一个标签绑定多个事件，事件之间以空格分割
			     $obj.bind("监听事件1,监听事件2",function(){})

V_12.0 JQUERY框架总结:
        一。什么是JQUERY对象:一个js中自定义类型对象【new Object()】,
		                       在这个对象拥有一个数组属性，保存定位的所有的DOM对象
									  使用这个对象拥有的功能函数，操作管理数组保存的DOM对象，
									  从而间接操作浏览器内存中HTML标签

        二。JQUERY框架中定位浏览器内存中标签的方式有几种:
		                      1)基本选择器：根据ID编号，标签类型名，标签采用的CSS样式名
									 2)层级选择器: 根据标签之间父子关系和兄弟关系
									 3)基本过滤选择器：根据定位DOM对象，在JQUERY对象存储的位置过滤筛选
									 4)表单域标签选择器：根据input标签中type属性内容定位标签
									 5)表单域专有状态过滤选择器：根据表单域标签专有的【四种状态】过滤筛选
									 6)基本属性过滤选择器：根据标签中是否手动声明了指定基本属性及其指定基本属性的内容是否等于指定内容
									                        进行过滤筛选
                            7)可见性过滤选择器：根据标签中display属性内容，过滤筛选标签
									 8)子元素过滤选择器：定位父标签中，指定位置的所有子标签 nth-child
									 9)内容过滤选择器：根据标签是否拥有【指定显示内容】和【指定子标签】定位筛选

       三。JQUERY提供用于操作DOM对象，所需要的功能函数
		              val(),text(),prop(),attr(),append(),appendTo()
						  show(),hide(),css()

       四。如何将【监听事件】绑定对应标签上
		              $obj.bind("监听事件名",function(){})
						  $obj.监听事件函数名(function (){})
#NoEnv
;=== 按下、弹起、双击、三击、长按、开关的设计（keywait命令） ===========================================================================================
;按下、弹起的设计

/* 正常情况下, 按键有一短击间隔的判定。在此期间弹起按键，仅激发1回键功能(如输出字符)。
在按键时长超过一定时间, 将视作连续按键激发。热键功能触发原则在此与普通按键输出规律基本相同。
大部分热键激活原则为按下瞬间立即触发，也就是说按下激发是默认操作，不用特殊设计。
鼠标左/右/中键(L/R/MButton)相对特别，它在按下时激发，而长按不会多次激发功能，
这是为给拖动鼠标进行选择功能让路。
*/
Lbutton::
RButton::
MButton::
/* 在修饰符的章节，我们列出了一个修饰符就是up，使用这个修饰符就可以实现弹起触发，
这种方式无限延长激发时间，直到按键弹起。
即无论按键时长多久，仅产生一次功能激活。
因此具有一定稳定性。其基本格式如下：
*/

键名 up::             ;up后缀热键创建办法

;常见例子：

esc up::
up up::
1 up & 2 up::
!^a up::
/*这里也有一些特殊情况：

仅ctrl、shift、alt 三个修饰符(不包括win键)做单按键热键时, 无需 up 后缀 即 弹起触发.
*/

alt::
shift::
ctrl::
;热键与带up后缀的热键可以同时存在.

a::send, 1
a up::send, 2
/*
这两行代码意味着短击a键输出12
长按a键输出11111.....2
*/

;3个修饰符做单按键热键带up后缀，原有功能将被覆盖, 即失去快捷键功能

ctrl up::   ;此热键将覆盖ctrl的功能。

;其他示例:

ctrl::
ctrl up::
;若存在这样的热键，ctrl键功能执行原则将被转为按下激活。
;
;这里可以设计为热键开关，下面例子的作用是：
;长按鼠标左键，执行以50ms为间隔疯狂点击鼠标左键，鼠标左键抬起，停止按键。

~*LButton::SetTimer LianDian, 50
~*LButton Up::SetTimer LianDian, Off
LianDian:
Send  {LButton}
Return














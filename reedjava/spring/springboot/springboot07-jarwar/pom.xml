<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>top.ireed</groupId>
		<artifactId>springboot</artifactId>
		<version>1.0.0</version>
	</parent>
	<!--表示将要编译为war包-->
	<packaging>war</packaging>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>springboot07-jarwar</artifactId>
	<version>1.0.0</version>
	<name>springboot07-jarWar</name>
	<description>springboot打jar war包的区别及使用</description>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.7.3</version>
			<!--排除 spring-boot-starter-web 中的 Tomcat-->
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>2.7.3</version>
			<!--打包的时候可以不用包进去，别的设施会提供。事实上该依赖理论上可以参与编译，测试，运行等周期。
				相当于compile，但是打包阶段做了exclude操作-->
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<!--Spring Boot war编译依赖-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${war.version}</version>
				<configuration>
					<!--屏蔽web.xml-->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
